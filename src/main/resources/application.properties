server.port:8085

spring.application.name=employee-info-service

#eureka.client.serviceUrl.defaultZone= ${EUREKA_URI:http://localhost:8761/eureka}
#eureka.client.instance.preferIpAddress= true
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true

#mvn spring-boot:run -Dspring-boot.run.profiles=dev -- To run the Maven build and start the server for specific profile
#java -jar \target\my-app.jar -Dspring.profiles.active=dev -- We can mention in the Dockerfile, to build and start the server for specific profile
spring.profiles.active = dev

#logging.level.root=WARN
#logging.level.com.department.HR=DEBUG

#java -jar target/spring-boot-logging-0.0.1-SNAPSHOT.jar --trace
#mvn spring-boot:run
#  -Dspring-boot.run.arguments=--logging.level.org.springframework=TRACE,--logging.level.com.baeldung=TRACE

#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

#spring.jpa.hibernate.ddl-auto can be none, update, create, or create-drop.
    #none: The default for MySQL. No change is made to the database structure.
    #update: Hibernate changes the database according to the given entity structures.
    #create: Creates the database every time but does not drop it on close.
    #create-drop: Creates the database and drops it when SessionFactory closes.
#spring.datasource.url